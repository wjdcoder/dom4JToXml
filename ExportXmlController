import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.*;

@RestController
@RequestMapping(value = Constants.URI_PUBLIC_API_PREFIX)
public class ExportXmlController {

    @Autowired
    private IExportXmlService exportXmlService;

    /**
     * get rating_event_watch table's xml
     * */
    @RequestMapping(value = "/getRatingEventWatchXml", method = RequestMethod.GET)
    @ResponseBody
    public String getRatingEventWatchXml(HttpServletResponse response,String startTime, String endTime) {
        if(startTime == null){
            return "The start time is empty.";
        }

        if(endTime == null){
            return "The end time is empty.";
        }

        try {
            Date sTime = new SimpleDateFormat("yyyy-MM-dd").parse(startTime);
            Date eTime = new SimpleDateFormat("yyyy-MM-dd").parse(endTime);
            long day = (eTime.getTime()-sTime.getTime())/(24*60*60*1000);

            //创建临时路径
            String realPath = FileUtils.getRealPath("temp") + (new Date()).getTime();//加时间搓，使用完后删除路径
            FileUtils.judeDirExists(new File(realPath));
            String fileName = "";

            List<String> filesPath = new ArrayList<>();
            //循环生成xml文件
            Calendar calendar   =   new GregorianCalendar();
            SimpleDateFormat format =new SimpleDateFormat("yyyyMMdd");
            Date tempTime = sTime;
            for(int i = 0; i <= day; i++){
                if(i > 0){
                    calendar.setTime(tempTime);
                    //把日期往后增加一天.整数往后推,负数往前移动
                    calendar.add(calendar.DATE,1);
                    tempTime = calendar.getTime();
                }
                //加载导出xml所使用的数据
                List<RatingEventWatch> list = exportXmlService.getEventWatchDataByDate(tempTime);
                if (list != null && list.size() > 0) {
                    fileName =  RatingEventWatch.class.getSimpleName() +"s_" + format.format(tempTime) + ".xml";
                    Dom4jToXmlUtil.writeXml(list, RatingEventWatch.class, realPath, fileName);
                    filesPath.add(realPath + "/" + fileName);
                }
            }

            //文件压缩
            String zipName=  RatingEventWatch.class.getSimpleName() + "_" + format.format(sTime)+ "_" + format.format(eTime)+ ".zip";
            ZipUtils.zipFiles(filesPath, new File(realPath + "/" + zipName));
            //导出文件流
            Dom4jToXmlUtil.exportFile(response, realPath, zipName);
            //删除临时路径
            FileUtils.dropDirExists(realPath);
        }catch (Exception e){
            e.printStackTrace();
            return "Parameters of the abnormal.";
        }
        return "";
    }
}
